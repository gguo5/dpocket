<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 15/07/2015 2:16:48 PM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="dpocket.entity.Product" table="product" catalog="daigou" optimistic-lock="version">
        <id name="productId" type="java.lang.Short">
            <column name="product_id" />
            <generator class="identity" />
        </id>
        <many-to-one name="category" class="dpocket.entity.Category" fetch="select">
            <column name="category_id" not-null="true" />
        </many-to-one>
        <property name="productName" type="string">
            <column name="product_name" not-null="true" />
        </property>
        <property name="description" type="string">
            <column name="description" length="65535" />
        </property>
        <property name="size" type="string">
            <column name="size" length="20" />
        </property>
        <property name="price" type="big_decimal">
            <column name="price" precision="8" />
        </property>
        <property name="weight" type="big_decimal">
            <column name="weight" precision="8" scale="3" />
        </property>
        <property name="shippmentCost" type="big_decimal">
            <column name="shippment_cost" precision="5" />
        </property>
        <property name="notes" type="string">
            <column name="notes" length="65535" />
        </property>
        <property name="archvFlag" type="char">
            <column name="archv_flag" length="1" not-null="true" />
        </property>
        <property name="lastUpdate" type="timestamp">
            <column name="last_update" length="19" not-null="true" />
        </property>
        <set name="orderProducts" table="order_product" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="product_id" not-null="true" />
            </key>
            <one-to-many class="dpocket.entity.OrderProduct" />
        </set>
        <set name="productProcurements" table="product_procurement" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="product_id" not-null="true" />
            </key>
            <one-to-many class="dpocket.entity.ProductProcurement" />
        </set>
    </class>
</hibernate-mapping>
