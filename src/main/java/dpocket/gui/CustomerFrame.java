/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dpocket.gui;

import dpocket.entity.VCustomerList;
import dpocket.entity.VCustomerListId;
import dpocket.util.HibernateUtil;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *
 * @author gguo
 */
public class CustomerFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerFrame
     */
    public CustomerFrame() {
        initComponents();
        populateCustomerList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_cust = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Manager");

        tbl_cust.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_cust);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_cust;
    // End of variables declaration//GEN-END:variables

    private static String QUERY_VW_Customer_List = "from VCustomerList";

    private void populateCustomerList() {

        executeHQLQuery(QUERY_VW_Customer_List);

    }

    private void executeHQLQuery(String hql) {
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            displayResult(resultList);
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }

    private void displayResult(List resultList) {
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();

        tableHeaders.add("cust_id");
        tableHeaders.add("Customer Name");
        tableHeaders.add("Phone");
        tableHeaders.add("Province");
        tableHeaders.add("City");
        tableHeaders.add("Suburb");
        tableHeaders.add("Address");
        tableHeaders.add("Postcode");
        tableHeaders.add("Email");
        tableHeaders.add("Card No");
        tableHeaders.add("Front");
        tableHeaders.add("Back");

        for (Object o : resultList) {
            VCustomerList vcl = (VCustomerList) o;
            VCustomerListId vclId = vcl.getId();
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(vclId.getCustomerId());
            oneRow.add(vclId.getCustomerName());
            oneRow.add(vclId.getPhone());
            oneRow.add(vclId.getProvince());
            oneRow.add(vclId.getCity());
            oneRow.add(vclId.getSuburb());
            oneRow.add(vclId.getAddress());
            oneRow.add(vclId.getPostcode());
            oneRow.add(vclId.getEmail());
            oneRow.add(vclId.getFilePathFront());
            oneRow.add(vclId.getFilePathBack());
            tableData.add(oneRow);
        }
        tbl_cust.setModel(new DefaultTableModel(tableData, tableHeaders));

    }
}
