/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dpocket.gui;

import dpocket.util.HibernateUtil;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import dpocket.entity.*;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;
import org.apache.log4j.Logger;

/**
 *
 * @author Grant
 */
public class DPocket extends javax.swing.JFrame {

    final static Logger logger = Logger.getLogger(DPocket.class.getName());

    /**
     * Creates new form MainFrame
     */
    public DPocket() {
        initComponents();
        populateUnshipped();
        populateOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        split_main = new javax.swing.JSplitPane();
        split_display = new javax.swing.JSplitPane();
        jsp_shippment = new javax.swing.JScrollPane();
        tbl_tracking = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jToolBar2 = new javax.swing.JToolBar();
        lbl_btn_cust1 = new javax.swing.JLabel();
        lbl_btn_cust = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jm_main = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dora Pocket Management System");
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\gguo\\Documents\\NetBeansProjects\\dpocket\\src\\main\\resources\\dpocket\\icons\\icon.png"));
        setPreferredSize(new java.awt.Dimension(800, 600));

        split_main.setDividerLocation(60);

        split_display.setDividerLocation(300);
        split_display.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jsp_shippment.setMinimumSize(new java.awt.Dimension(300, 100));

        tbl_tracking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_tracking.setMinimumSize(new java.awt.Dimension(60, 200));
        tbl_tracking.setPreferredSize(new java.awt.Dimension(300, 200));
        jsp_shippment.setViewportView(tbl_tracking);

        split_display.setLeftComponent(jsp_shippment);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(23, 100));
        split_display.setRightComponent(jScrollPane2);

        split_main.setRightComponent(split_display);

        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar2.setRollover(true);
        jToolBar2.setMargin(new java.awt.Insets(0, 0, 5, 0));
        jToolBar2.setMaximumSize(new java.awt.Dimension(200, 100));
        jToolBar2.setMinimumSize(new java.awt.Dimension(30, 13));

        lbl_btn_cust1.setIcon(new javax.swing.ImageIcon("C:\\Users\\gguo\\Documents\\NetBeansProjects\\dpocket\\src\\main\\resources\\dpocket\\icons\\Order-Tracking.png")); // NOI18N
        lbl_btn_cust1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_btn_cust1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_btn_cust1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_btn_cust1MouseExited(evt);
            }
        });
        jToolBar2.add(lbl_btn_cust1);

        lbl_btn_cust.setIcon(new javax.swing.ImageIcon("C:\\Users\\gguo\\Documents\\NetBeansProjects\\DPocket\\src\\main\\resources\\dpocket\\icons\\customers.png")); // NOI18N
        lbl_btn_cust.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_btn_custMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_btn_custMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_btn_custMouseExited(evt);
            }
        });
        jToolBar2.add(lbl_btn_cust);

        split_main.setLeftComponent(jToolBar2);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 50));
        jScrollPane1.setViewportView(jScrollPane3);

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        menu_exit.setMnemonic('x');
        menu_exit.setText("Exit");
        menu_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_exitActionPerformed(evt);
            }
        });
        jMenu1.add(menu_exit);

        jm_main.add(jMenu1);

        jMenu2.setText("Edit");
        jm_main.add(jMenu2);

        setJMenuBar(jm_main);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(split_main, javax.swing.GroupLayout.DEFAULT_SIZE, 1465, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(split_main, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_btn_custMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_custMouseClicked
        // TODO add your handling code here:
        new CustomerFrame().setVisible(true);
    }//GEN-LAST:event_lbl_btn_custMouseClicked

    private void lbl_btn_custMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_custMouseEntered
        // TODO add your handling code here:
        JLabel cust_lbl = (JLabel) evt.getComponent();
        cust_lbl.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        cust_lbl.setBorder(LineBorder.createGrayLineBorder());
    }//GEN-LAST:event_lbl_btn_custMouseEntered

    private void lbl_btn_custMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_custMouseExited
        // TODO add your handling code here:
        JLabel cust_lbl = (JLabel) evt.getComponent();
        cust_lbl.setCursor(Cursor.getDefaultCursor());
        cust_lbl.setBorder(null);
    }//GEN-LAST:event_lbl_btn_custMouseExited

    private void menu_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menu_exitActionPerformed

    private void lbl_btn_cust1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_cust1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_btn_cust1MouseClicked

    private void lbl_btn_cust1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_cust1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_btn_cust1MouseEntered

    private void lbl_btn_cust1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_btn_cust1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_btn_cust1MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DPocket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DPocket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DPocket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DPocket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DPocket().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JMenuBar jm_main;
    private javax.swing.JScrollPane jsp_shippment;
    private javax.swing.JLabel lbl_btn_cust;
    private javax.swing.JLabel lbl_btn_cust1;
    private javax.swing.JMenuItem menu_exit;
    private javax.swing.JSplitPane split_display;
    private javax.swing.JSplitPane split_main;
    private javax.swing.JTable tbl_tracking;
    // End of variables declaration//GEN-END:variables

    private static String QUERY_TBL_TRACKING = "from Shippment as sp\n"
            + "left join sp.orderShippments as os\n"
            + "join fetch os.order as o\n"
            + "left join fetch o.customer as c";

    private void populateUnshipped() {
        executeHQLQuery(QUERY_TBL_TRACKING);
    }

    private void executeHQLQuery(String hql) {
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            displayResult(resultList);
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }

    private void displayResult(List resultList) {
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();

        tableHeaders.add("Tracking No");
        tableHeaders.add("Shippment Id");
        tableHeaders.add("Shipped Date");
        tableHeaders.add("Destination");
        tableHeaders.add("Status");
        tableHeaders.add("Order ID");
        tableHeaders.add("Customer Name");
        tableHeaders.add("Customer ID");

        for (Object o : resultList) {
            Object[] objArray = (Object[]) o;
            Shippment sp = (Shippment)objArray[0];
            OrderShippment osp = (OrderShippment)objArray[1];
            Order order = osp.getOrder();
            Customer cust = order.getCustomer();
            
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(sp.getTrackNumber());
            oneRow.add(sp.getShippmentId());
            oneRow.add(sp.getShippedDate());
            oneRow.add(sp.getToLocation());
            oneRow.add(sp.getStatus());
            oneRow.add(order.getOrderId());
            oneRow.add(cust.getCustomerName());
            oneRow.add(cust.getCustomerId());
            tableData.add(oneRow);
            
            
            //System.out.println(pair[0]);
            //System.out.println(pair[1] + "\n");

        }
        tbl_tracking.setModel(new DefaultTableModel(tableData, tableHeaders));

    }

    private void populateOrders() {
        
    }
}
